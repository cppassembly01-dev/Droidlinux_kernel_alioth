name: Build Droidlinux Kernel

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y make git-core gnupg flex bison build-essential zip curl \
        zlib1g-dev libc6-dev-i386 x11proto-core-dev libx11-dev lib32z1-dev \
        libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig bc libssl-dev

    - name: Setup environment and toolchains
      run: |
        # Create toolchains directory
        mkdir -p $HOME/toolchains
        cd $HOME/toolchains
        
        # Download and extract Clang
        wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/android16-release/clang-r547379.tar.gz
        mkdir clang-r547379
        tar -xzf clang-r547379.tar.gz -C clang-r547379
        rm clang-r547379.tar.gz
        
        # Download and extract GCC
        wget https://developer.arm.com/-/media/Files/downloads/gnu/14.3.rel1/binrel/arm-gnu-toolchain-14.3.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
        mkdir arm-gnu-toolchain-14.3.rel1-x86_64-aarch64-none-linux-gnu
        tar -xf arm-gnu-toolchain-14.3.rel1-x86_64-aarch64-none-linux-gnu.tar.xz -C arm-gnu-toolchain-14.3.rel1-x86_64-aarch64-none-linux-gnu
        rm arm-gnu-toolchain-14.3.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
        
        # Setup KernelSU and SUSFS
        curl -LSs https://raw.githubusercontent.com/cppassembly01-dev/alioth_ath9k_htc/main/SUSFS/setup.sh | bash -

    - name: Build kernel
      run: |
        # Set environment variables
        export PATH="$HOME/toolchains/clang-r547379/bin:$HOME/toolchains/arm-gnu-toolchain-14.3.rel1-x86_64-aarch64-none-linux-gnu/bin:$PATH"
        export LINKER=ld.lld
        export KBUILD_BUILD_USER=akronnos
        export KBUILD_BUILD_HOST=nethunter
        
        # Build the kernel
        make O=out ARCH=arm64 SUBARCH=arm64 LLVM=1 LLVM_IAS=1 CLANG_TRIPLE=aarch64-linux-gnu- \
        CROSS_COMPILE=aarch64-none-linux-gnu- alioth_defconfig vendor/nethunter.config vendor/linux.config
        
        make O=out ARCH=arm64 SUBARCH=arm64 LLVM=1 LLVM_IAS=1 CLANG_TRIPLE=aarch64-linux-gnu- \
        CROSS_COMPILE=aarch64-none-linux-gnu- -j$(nproc --all)

    - name: Package kernel
      run: |
        cp out/arch/arm64/boot/Image.gz-dtb out/arch/arm64/boot/dtbo.img AnyKernel3/
        cd AnyKernel3
        zip -r9 "Droidlinux_kernel_alioth.zip" *

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: Droidlinux_kernel_alioth
        path: AnyKernel3/Droidlinux_kernel_alioth.zip
